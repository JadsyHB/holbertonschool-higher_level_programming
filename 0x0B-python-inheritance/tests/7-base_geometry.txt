IMPORT MODULE FOR TESTING

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

SUCCESSFUL TEST CASES:

    >>> base = BaseGeometry()
    >>> base.integer_validator("holberton", 1)

FAIL CASES:

    >>> base = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

    >>> base = BaseGeometry()
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

    >>> base = BaseGeometry()
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

    >>> base = BaseGeometry()
    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ...
    ValueError: distance must be greater than 0

    >>> base = BaseGeometry()
    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

    >>> base = BaseGeometry()
    >>> bg.integer_validator("name", [1, 2])
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer


    >>> base = BaseGeometry()
    >>> base.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> base = BaseGeometry()
    >>> base.integer_validator("name")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'
